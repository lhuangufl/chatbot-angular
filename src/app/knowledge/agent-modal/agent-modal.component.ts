import { Component, EventEmitter, Output } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

interface Agent {
  id: number;
  name: string;
  description: string;
  author: string;
  photo: string;
}

@Component({
  selector: 'app-agent-modal',
  templateUrl: './agent-modal.component.html',
  styleUrls: ['./agent-modal.component.css'],
  standalone: true,
  imports: [CommonModule, FormsModule] // Import FormsModule for ngModel
})
export class AgentModalComponent {

  newAgent: Agent = {
    id: 0, // Assume ID is generated by the backend or another mechanism
    name: '',
    description: '',
    author: '',
    photo: ''
  };

  @Output() close = new EventEmitter<void>();

  // Other component properties and methods

  closeModal(): void {
    this.close.emit();
  }

  @Output() create = new EventEmitter<Agent>();

  createAgent(): void {
    this.create.emit(this.newAgent); // Emit the new agent details
    this.clearForm(); // Optional: Clear the form after creation
  }

  clearForm(): void {
    this.newAgent = { id: 0, name: '', description: '', author: '', photo: '' }; // Reset the form
  }
}
